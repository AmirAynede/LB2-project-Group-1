For data collection we did:
> obtain the API URL: {
"oc": "2759", "sequence length" : "40", "Reviewed": "yes", "fragments": "no", "PE": "evidence at protein level"
} 
RESULTS IN : {
https://rest.uniprot.org/uniprotkb/search?compressed=true&format=fasta&query=%28%28taxonomy_id%3A2759%29+AND+%28length%3A%5B40+TO+*%5D%29+AND+%28reviewed%3Atrue%29+AND+%28fragment%3Afalse%29+AND+%28existence%3A1%29%29&size=500
}

def filter_entry_pos(entry):
    # We iterate over the features of the entry
    for feature in entry["features"]:
        # We only consider features of type Signal
        if feature["type"] == "Signal":
            # Check if the coiled-coil starts before position 100
            if feature["location"]["end"]["value"] >= 14:
              if feature["evidences"]["evidenceCode"] == "ECO:0000269" in feature["evidences"]:
                  return True
    return False

We were trying to filter positives with this function, which has some python syntax problems in the 3rd nested if. So, we realized it is best to use 2 separate APIs for the neg and pos datasets. The positive has to be filtered by Signal Peptide | * | Experimental.

The command doesn’t do what we wanted it to do because of operator precedence in Python. Python reads it as:

if feature["evidences"]["evidenceCode"] == ("ECO:0000269" in feature["evidences"]):


################################################################################################


BG - I edited the notebook:
	• The last function was splitted in 2 functions, one for pos and one for negs 
 	• The I commented out the filter_neg_entry function because idk if we actually need it
	• I commented the fact that instead of one output_file variable we need 2, one for pos and one for neg
	• I started the editing of the last cell of the notebook calling the 2 functions
   - The next steps should be:
	• verification of numerosity of the datasets all together (Amir and I checked quickly)
	• Collection of the datasets as TSV files running the script
	• Figuring out how to extract the FASTA format (maybe through the TSV) 

Amir:
Today we editted the script and finalize it by adding the "break" right after the for loop so it will prevent any unwanted iteration.
Then, we downloaded the pos and neg TSV file. The final number of the True is 1384. Find the part we eddited in the following:

 hel_trs = False
    for f in entry["features"]:
        # We only consider the first coiled-coil segment
        if f["type"] == "Transmembrane" and f["description"]=="Helical" and f["location"]["start"]["value"] <= 90:
          hel_trs = True
          break

Moreover, we added the script to extract the fasta seq that we need:
